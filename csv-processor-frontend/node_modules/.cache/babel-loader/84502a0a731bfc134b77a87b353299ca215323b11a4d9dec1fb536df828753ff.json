{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OK\\\\Documents\\\\Fiverr Docs\\\\omerholz\\\\csv-processor-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { usePapaParse } from 'react-papaparse';\nimport './App.css';\nimport { CSVLink } from 'react-csv';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale);\nfunction App() {\n  _s();\n  const {\n    readString\n  } = usePapaParse();\n  const [csvData, setCsvData] = useState(null);\n  const [results, setResults] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [showProgress, setShowProgress] = useState(false);\n  const [showCharts, setShowCharts] = useState(false);\n  const [validationMessage, setValidationMessage] = useState('');\n  const fileInputRef = useRef(null);\n  const handleFileDrop = e => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    handleFileUpload(file);\n  };\n  const handleFileClick = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    handleFileUpload(file);\n  };\n  const handleFileUpload = file => {\n    if (!file || file.type !== 'text/csv') {\n      alert('Please upload a valid CSV file.');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = event => {\n      readString(event.target.result, {\n        header: true,\n        complete: result => {\n          const seen = new Set();\n          let nullRecordsCount = 0;\n          let duplicateRecordsCount = 0;\n          const validData = result.data.filter(row => {\n            try {\n              const keys = Object.keys(row);\n              const key0 = row[keys[0]];\n              const key1 = row[keys[1]];\n              const isValid = keys.length >= 2 && key0 && key1;\n              if (isValid) {\n                const duplicateKey = `${key0}-${key1}`;\n                if (seen.has(duplicateKey)) {\n                  duplicateRecordsCount++;\n                  return false;\n                }\n                seen.add(duplicateKey);\n              } else {\n                nullRecordsCount++;\n              }\n              return isValid;\n            } catch (error) {\n              return false;\n            }\n          });\n          if (validData.length === 0) {\n            alert('No valid data in CSV file');\n            return;\n          }\n          const formattedData = validData.map(row => ({\n            id: row[Object.keys(row)[0]],\n            URL: row[Object.keys(row)[1]]\n          }));\n          setCsvData(formattedData);\n          setShowProgress(false);\n          setShowCharts(false);\n          setValidationMessage(`CSV file uploaded and validated successfully. Removed ${nullRecordsCount} null records, ${duplicateRecordsCount} duplicate records. Total valid records: ${formattedData.length}`);\n        }\n      });\n    };\n    reader.readAsText(file);\n  };\n  const handleProcess = () => {\n    if (!csvData) {\n      alert('Please upload a CSV file before processing.');\n      return;\n    }\n\n    // Send data to API\n    fetch('http://localhost:8080/process-csv', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(csvData)\n    }).then(response => response.json()).then(data => {\n      if (data.status === 'ok') {\n        setShowCharts(true);\n        setShowProgress(true);\n        getRealTimeUpdates();\n      } else {\n        alert('Error processing CSV data');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      alert('Error processing CSV data');\n    });\n  };\n  const getRealTimeUpdates = () => {\n    const interval = setInterval(() => {\n      fetch('http://localhost:8080/progress').then(response => response.json()).then(data => {\n        setProgress(data.progress);\n        setResults(data.results);\n        if (data.progress >= 100) {\n          clearInterval(interval);\n          setShowProgress(false);\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n        clearInterval(interval);\n      });\n    }, 1000);\n  };\n  const responseCodeCounts = results.reduce((acc, result) => {\n    acc[result.responseCode] = (acc[result.responseCode] || 0) + 1;\n    return acc;\n  }, {});\n  const chartData = {\n    labels: Object.keys(responseCodeCounts),\n    datasets: [{\n      label: '# of Responses',\n      data: Object.values(responseCodeCounts),\n      backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)'],\n      borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"project-name\",\n        children: \"CSV Processor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-drop\",\n        onDrop: handleFileDrop,\n        onDragOver: e => e.preventDefault(),\n        onClick: handleFileClick,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and drop a CSV file here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleFileChange,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), validationMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"validation-message\",\n        children: validationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 31\n      }, this), showProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProcess,\n        className: \"process-button\",\n        children: \"Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), showCharts && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          },\n          width: 400,\n          height: 400\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), results.length > 0 && showCharts && /*#__PURE__*/_jsxDEV(CSVLink, {\n        data: results,\n        filename: \"results.csv\",\n        className: \"App-link\",\n        children: \"Download Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H1OTXO48ANny7UQGYRsvg34mgYU=\", false, function () {\n  return [usePapaParse];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","usePapaParse","CSVLink","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","App","_s","readString","csvData","setCsvData","results","setResults","progress","setProgress","showProgress","setShowProgress","showCharts","setShowCharts","validationMessage","setValidationMessage","fileInputRef","handleFileDrop","e","preventDefault","file","dataTransfer","files","handleFileUpload","handleFileClick","current","click","handleFileChange","target","type","alert","reader","FileReader","onload","event","result","header","complete","seen","Set","nullRecordsCount","duplicateRecordsCount","validData","data","filter","row","keys","Object","key0","key1","isValid","length","duplicateKey","has","add","error","formattedData","map","id","URL","readAsText","handleProcess","fetch","method","headers","body","JSON","stringify","then","response","json","status","getRealTimeUpdates","catch","console","interval","setInterval","clearInterval","responseCodeCounts","reduce","acc","responseCode","chartData","labels","datasets","label","values","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","onClick","accept","onChange","ref","style","display","width","options","responsive","maintainAspectRatio","height","filename","_c","$RefreshReg$"],"sources":["C:/Users/OK/Documents/Fiverr Docs/omerholz/csv-processor-frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { usePapaParse } from 'react-papaparse';\nimport './App.css';\nimport { CSVLink } from 'react-csv';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale } from 'chart.js';\n\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale);\n\nfunction App() {\n  const { readString } = usePapaParse();\n  const [csvData, setCsvData] = useState(null);\n  const [results, setResults] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [showProgress, setShowProgress] = useState(false);\n  const [showCharts, setShowCharts] = useState(false);\n  const [validationMessage, setValidationMessage] = useState('');\n  const fileInputRef = useRef(null);\n\n  const handleFileDrop = (e) => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    handleFileUpload(file);\n  };\n\n  const handleFileClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    handleFileUpload(file);\n  };\n\n  const handleFileUpload = (file) => {\n    if (!file || file.type !== 'text/csv') {\n      alert('Please upload a valid CSV file.');\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      readString(event.target.result, {\n        header: true,\n        complete: (result) => {\n          const seen = new Set();\n          let nullRecordsCount = 0;\n          let duplicateRecordsCount = 0;\n\n          const validData = result.data.filter((row) => {\n            try {\n              const keys = Object.keys(row);\n              const key0 = row[keys[0]];\n              const key1 = row[keys[1]];\n              const isValid = keys.length >= 2 && key0 && key1;\n\n              if (isValid) {\n                const duplicateKey = `${key0}-${key1}`;\n                if (seen.has(duplicateKey)) {\n                  duplicateRecordsCount++;\n                  return false;\n                }\n                seen.add(duplicateKey);\n              } else {\n                nullRecordsCount++;\n              }\n              \n              return isValid;\n            } catch (error) {\n              return false;\n            }\n          });\n\n          if (validData.length === 0) {\n            alert('No valid data in CSV file');\n            return;\n          }\n\n          const formattedData = validData.map((row) => ({\n            id: row[Object.keys(row)[0]],\n            URL: row[Object.keys(row)[1]],\n          }));\n\n          setCsvData(formattedData);\n          setShowProgress(false);\n          setShowCharts(false);\n          setValidationMessage(\n            `CSV file uploaded and validated successfully. Removed ${nullRecordsCount} null records, ${duplicateRecordsCount} duplicate records. Total valid records: ${formattedData.length}`\n          );\n        },\n      });\n    };\n    reader.readAsText(file);\n  };\n\n  const handleProcess = () => {\n    if (!csvData) {\n      alert('Please upload a CSV file before processing.');\n      return;\n    }\n    \n    // Send data to API\n    fetch('http://localhost:8080/process-csv', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(csvData),\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.status === 'ok') {\n        setShowCharts(true);\n        setShowProgress(true);\n        getRealTimeUpdates();\n      } else {\n        alert('Error processing CSV data');\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      alert('Error processing CSV data');\n    });\n  };\n\n  const getRealTimeUpdates = () => {\n    const interval = setInterval(() => {\n      fetch('http://localhost:8080/progress')\n        .then(response => response.json())\n        .then(data => {\n          setProgress(data.progress);\n          setResults(data.results);\n          if (data.progress >= 100) {\n            clearInterval(interval);\n            setShowProgress(false);\n          }\n        })\n        .catch(error => {\n          console.error('Error:', error);\n          clearInterval(interval);\n        });\n    }, 1000);\n  };\n\n  const responseCodeCounts = results.reduce((acc, result) => {\n    acc[result.responseCode] = (acc[result.responseCode] || 0) + 1;\n    return acc;\n  }, {});\n\n  const chartData = {\n    labels: Object.keys(responseCodeCounts),\n    datasets: [\n      {\n        label: '# of Responses',\n        data: Object.values(responseCodeCounts),\n        backgroundColor: [\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n        ],\n        borderColor: [\n          'rgba(75, 192, 192, 1)',\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"project-name\">CSV Processor</h1>\n        <div\n          className=\"file-drop\"\n          onDrop={handleFileDrop}\n          onDragOver={(e) => e.preventDefault()}\n          onClick={handleFileClick}\n        >\n          <p>Drag and drop a CSV file here or click to upload</p>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleFileChange}\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n          />\n        </div>\n        {validationMessage && <p className=\"validation-message\">{validationMessage}</p>}\n        {showProgress && (\n          <div className=\"progress-bar\">\n            <div className=\"progress\" style={{ width: `${progress}%` }}></div>\n          </div>\n        )}\n        <button onClick={handleProcess} className=\"process-button\">\n          Process\n        </button>\n        {showCharts && (\n          <div className=\"charts\">\n            <Pie\n              data={chartData}\n              options={{ responsive: true, maintainAspectRatio: false }}\n              width={400}\n              height={400}\n            />\n          </div>\n        )}\n        {results.length > 0 && showCharts && (\n          <CSVLink data={results} filename=\"results.csv\" className=\"App-link\">\n            Download Results\n          </CSVLink>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}