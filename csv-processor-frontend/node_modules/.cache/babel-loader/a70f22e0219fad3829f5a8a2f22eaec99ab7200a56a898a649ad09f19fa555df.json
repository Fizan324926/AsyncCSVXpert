{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OK\\\\Documents\\\\Fiverr Docs\\\\omerholz\\\\csv-processor-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { usePapaParse } from 'react-papaparse';\nimport './App.css';\nimport { CSVLink } from 'react-csv';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nfunction App() {\n  _s();\n  const {\n    readString\n  } = usePapaParse();\n  const [csvData, setCsvData] = useState(null);\n  const [results, setResults] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const handleFileDrop = e => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      readString(event.target.result, {\n        header: true,\n        complete: result => {\n          setCsvData(result.data);\n          performRequests(result.data);\n        }\n      });\n    };\n    reader.readAsText(file);\n  };\n  const performRequests = async data => {\n    const totalRequests = data.length;\n    let completedRequests = 0;\n    const results = [];\n    await Promise.all(data.map(async row => {\n      const startTime = performance.now();\n      try {\n        const response = await fetch(row.URL, {\n          method: 'HEAD'\n        });\n        const endTime = performance.now();\n        results.push({\n          id: row.id,\n          URL: row.URL,\n          responseCode: response.status,\n          responseTime: (endTime - startTime).toFixed(2),\n          fullResponse: JSON.stringify(response.headers)\n        });\n      } catch (error) {\n        results.push({\n          id: row.id,\n          URL: row.URL,\n          responseCode: 'Error',\n          responseTime: 'N/A',\n          fullResponse: error.message\n        });\n      }\n      completedRequests++;\n      setProgress(completedRequests / totalRequests * 100);\n    }));\n    setResults(results);\n  };\n  const responseCodeCounts = results.reduce((acc, result) => {\n    acc[result.responseCode] = (acc[result.responseCode] || 0) + 1;\n    return acc;\n  }, {});\n  const chartData = {\n    labels: Object.keys(responseCodeCounts),\n    datasets: [{\n      label: '# of Responses',\n      data: Object.values(responseCodeCounts),\n      backgroundColor: ['rgba(75, 192, 192, 0.2)'],\n      borderColor: ['rgba(75, 192, 192, 1)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-drop\",\n        onDrop: handleFileDrop,\n        onDragOver: e => e.preventDefault(),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and drop a CSV file here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts\",\n        children: [/*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(CSVLink, {\n        data: results,\n        filename: \"results.csv\",\n        className: \"App-link\",\n        children: \"Download Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UftazVHl9b3nkRO4SiEkAHaXrs0=\", false, function () {\n  return [usePapaParse];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","usePapaParse","CSVLink","Bar","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","BarElement","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","App","_s","readString","csvData","setCsvData","results","setResults","progress","setProgress","handleFileDrop","e","preventDefault","file","dataTransfer","files","reader","FileReader","onload","event","target","result","header","complete","data","performRequests","readAsText","totalRequests","length","completedRequests","Promise","all","map","row","startTime","performance","now","response","fetch","URL","method","endTime","push","id","responseCode","status","responseTime","toFixed","fullResponse","JSON","stringify","headers","error","message","responseCodeCounts","reduce","acc","chartData","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","className","children","onDrop","onDragOver","fileName","_jsxFileName","lineNumber","columnNumber","style","width","filename","_c","$RefreshReg$"],"sources":["C:/Users/OK/Documents/Fiverr Docs/omerholz/csv-processor-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { usePapaParse } from 'react-papaparse';\nimport './App.css';\nimport { CSVLink } from 'react-csv';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\nChartJS.register(ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nfunction App() {\n  const { readString } = usePapaParse();\n  const [csvData, setCsvData] = useState(null);\n  const [results, setResults] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const handleFileDrop = (e) => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      readString(event.target.result, {\n        header: true,\n        complete: (result) => {\n          setCsvData(result.data);\n          performRequests(result.data);\n        },\n      });\n    };\n    reader.readAsText(file);\n  };\n\n  const performRequests = async (data) => {\n    const totalRequests = data.length;\n    let completedRequests = 0;\n    const results = [];\n\n    await Promise.all(\n      data.map(async (row) => {\n        const startTime = performance.now();\n        try {\n          const response = await fetch(row.URL, { method: 'HEAD' });\n          const endTime = performance.now();\n          results.push({\n            id: row.id,\n            URL: row.URL,\n            responseCode: response.status,\n            responseTime: (endTime - startTime).toFixed(2),\n            fullResponse: JSON.stringify(response.headers),\n          });\n        } catch (error) {\n          results.push({\n            id: row.id,\n            URL: row.URL,\n            responseCode: 'Error',\n            responseTime: 'N/A',\n            fullResponse: error.message,\n          });\n        }\n        completedRequests++;\n        setProgress((completedRequests / totalRequests) * 100);\n      })\n    );\n\n    setResults(results);\n  };\n\n  const responseCodeCounts = results.reduce((acc, result) => {\n    acc[result.responseCode] = (acc[result.responseCode] || 0) + 1;\n    return acc;\n  }, {});\n\n  const chartData = {\n    labels: Object.keys(responseCodeCounts),\n    datasets: [\n      {\n        label: '# of Responses',\n        data: Object.values(responseCodeCounts),\n        backgroundColor: ['rgba(75, 192, 192, 0.2)'],\n        borderColor: ['rgba(75, 192, 192, 1)'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"file-drop\" onDrop={handleFileDrop} onDragOver={(e) => e.preventDefault()}>\n          <p>Drag and drop a CSV file here</p>\n        </div>\n        <div className=\"progress-bar\">\n          <div className=\"progress\" style={{ width: `${progress}%` }}></div>\n        </div>\n        <div className=\"charts\">\n          <Bar data={chartData} />\n          <Pie data={chartData} />\n        </div>\n        {results.length > 0 && (\n          <CSVLink data={results} filename=\"results.csv\" className=\"App-link\">\n            Download Results\n          </CSVLink>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}